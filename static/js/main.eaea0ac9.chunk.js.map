{"version":3,"sources":["assets/logo.png","components/PrivateRoute.tsx","store/reducers/auth.ts","store/reducers/index.ts","store/actionTypes.tsx","store/store.tsx","axios/instaces.js","components/Group/GroupLabel.tsx","components/Loader.tsx","components/Group/GroupList.tsx","components/Task/TaskLabel.tsx","components/Task/TaskList.tsx","components/Home.tsx","store/actions.ts","containers/Authenticate.tsx","containers/Register.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","connect","state","authenticated","auth","token","length","exact","path","Component","render","route","component","to","initialState","refresh","expires_in","expire_on","Number","localStorage","getItem","Date","combineReducers","action","type","payload","setItem","setSeconds","getSeconds","toString","createStore","rootReducer","composeWithDevTools","authInstance","axios","create","baseURL","timeout","headers","hazizzInstance","GroupLabel","props","className","name","userCount","Loader","GroupList","url","this","then","resp","groupDetails","data","setState","map","group","key","id","TaskLabel","title","dueDate","checked","completed","disabled","children","creator","subject","tags","TaskList","params","showThera","unfinishedOnly","finishedOnly","startingDate","moment","format","endDate","add","task","displayName","description","Home","isMobile","saveToken","Authenticate","from","location","pathname","handleTokenSave","respData","history","replace","handleRegister","errorCode","search","handleGoogleAuth","tokenId","method","catch","response","src","logo","alt","appId","fields","callback","accessToken","size","onClick","clientId","onSuccess","onFailure","scope","Register","handleCheckChange","event","consent","target","registerUrlParameter","registerBodyParameter","loginValue","loginParameter","authType","status","queryParams","queryString","parse","substr","htmlFor","onChange","rel","href","Boolean","window","hostname","match","store","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eaea0ac9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.13001b87.png\";","import React, {ReactElement} from \"react\";\nimport {Route, Redirect} from 'react-router-dom'\nimport {connect} from \"react-redux\";\n\ntype PrivateRoute = {\n    exact?: boolean,\n    path: string,\n    Component?: any,\n    render?: () => null | ReactElement,\n    authenticated: boolean\n}\n\nconst PrivateRoute = ({\n                          exact = false,\n                          path,\n                          Component,\n                          render = () => null,\n                          authenticated = false\n                      }: PrivateRoute) => {\n    let route = <Route exact={exact} path={path} component={Component} render={() => render()}/>;\n    if (!authenticated)\n        route = <Redirect to=\"/authenticate\"/>;\n\n    return route;\n};\n\nconst mapStateToProps = (state: any) => {\n    const {auth} = state;\n    return {authenticated: auth.token.length > 0};\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);","import {SAVE_TOKEN} from \"../actionTypes\";\n\nconst initialState = {\n    token: \"\",\n    refresh: \"\",\n    expires_in: 0,\n    expire_on: 0,\n};\n\nif (Number(localStorage.getItem(\"expire_on\")) > Number(new Date())){\n    initialState.token = localStorage.getItem(\"token\") || \"\";\n    initialState.refresh = localStorage.getItem(\"refresh\") || \"\";\n    initialState.expires_in = Number(new Date(Number(localStorage.getItem(\"expire_on\")))) - Number(new Date());\n    initialState.expire_on = Number(localStorage.getItem(\"expire_on\"));\n}\n\nexport default (state = initialState, action: any) => {\n    switch (action.type) {\n        case SAVE_TOKEN:\n            const {token, refresh, expires_in} = action.payload;\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"refresh\", refresh);\n            localStorage.setItem(\"expire_on\", (new Date().setSeconds(new Date().getSeconds() + expires_in)).toString());\n            return {\n                ...state,\n                token,\n                refresh,\n                expires_in\n            };\n        default:\n            return state;\n    }\n};","import {combineReducers} from \"redux\";\nimport auth from \"./auth\";\n\nexport default combineReducers({auth});","export const SAVE_TOKEN = \"SAVE_TOKEN\";","import {createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nexport default createStore(rootReducer, composeWithDevTools());","import axios from 'axios';\n\nexport const authInstance = axios.create({\n    baseURL: 'https://hazizz.duckdns.org:9000/auth-server',\n    timeout: 2000,\n    headers: {\"Content-Type\": \"application/json\"},\n});\n\nexport const hazizzInstance = axios.create({\n    baseURL: 'https://hazizz.duckdns.org:9000/hazizz-server',\n    timeout: 3000,\n    headers: {\"Content-Type\": \"application/json\"},\n});\n\nexport const theraInstance = axios.create({\n    baseURL: 'https://hazizz.duckdns.org:9000/thera-server',\n    timeout: 2000,\n    headers: {\"Content-Type\": \"application/json\"},\n});","import React from 'react';\n\ninterface Props {\n    name: string,\n    userCount: number,\n}\n\nconst GroupLabel = (props: Props) => {\n    return (\n        <div className={\"groupLabel\"}>\n            Név: <span className={\"groupName\"}>{props.name}</span>&nbsp;\n            Létszám: <span className={\"groupUserCount\"}>{props.userCount}</span>\n        </div>\n    );\n};\n\nexport default GroupLabel;","import React from 'react';\n\nconst Loader = () => <div className={\"spinner\"}>Betöltés</div>;\n\nexport default Loader;","import React, {Component} from \"react\";\n\nimport {hazizzInstance} from \"../../axios/instaces\";\n\nimport {connect} from \"react-redux\";\nimport GroupLabel from \"./GroupLabel\";\nimport Loader from \"../Loader\";\n\nimport {Group} from \"../../types/types\";\n\ntype Props = {\n    isMobile: boolean,\n    token: string\n}\n\ntype State = {\n    render: any\n}\n\n\nclass GroupList extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            render: <Loader/>\n        };\n    }\n\n\n    componentDidMount(): void {\n        hazizzInstance({\n            url: '/me/groups',\n            headers: {\"Authorization\": \"Bearer \" + this.props.token}\n        })\n            .then(resp => {\n                const groupDetails: Array<Group> = resp.data;\n\n                this.setState({\n                    render: groupDetails.map(group => (<GroupLabel key={group.id} name={group.name} userCount={group.userCount}/>))\n                });\n            });\n    }\n\n    render() {\n        return (\n            <section className={\"groupSection\"}>\n                Csoportjaid: {this.state.render}\n            </section>\n        );\n    }\n}\n\nconst\n    mapStateToProps = (state: any) => {\n        return {token: state.auth.token};\n    };\n\nexport default connect(mapStateToProps)(GroupList);","import React from 'react';\n\ntype Props = {\n    title: string,\n    dueDate: string,\n    creator: string,\n    group: string,\n    subject: string,\n    tags: Array<string>,\n    completed: boolean,\n    children: string\n};\n\nconst TaskLabel = (props: Props) => {\n    return (\n        <div className={\"taskLabel\"}>\n            <h1>\n                <span>{props.title}</span>\n                <span>\n                    {props.dueDate}&nbsp;\n                    <input checked={props.completed} disabled title=\"Fejlesztés alatt!\" type=\"checkbox\" name=\"completed\"\n                           id={\"completed\" + props.title}/>\n                </span>\n            </h1>\n            <p>{props.children}</p>\n            <div className=\"taskDetails\">\n                <p>Létrehozta: {props.creator}</p>\n                <p>Csoport: {props.group}</p>\n                <p>Téma: {props.subject}</p>\n                <p>Címkék (kidolgozás alatt): {props.tags}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskLabel;","import React, {Component} from 'react';\nimport Loader from \"../Loader\";\nimport {hazizzInstance} from \"../../axios/instaces\";\nimport {connect} from 'react-redux';\nimport moment from \"moment\";\n\nimport {Task} from \"../../types/types\";\nimport TaskLabel from \"./TaskLabel\";\n\ntype Props = {\n    isMobile: boolean,\n    token: string\n}\n\ntype State = {\n    render: any\n}\n\nclass TaskList extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            render: <Loader/>\n        }\n    }\n\n    componentDidMount(): void {\n        hazizzInstance({\n            url: '/v2/me/tasks',\n            headers: {\"Authorization\": \"Bearer \" + this.props.token},\n            params: {\n                showThera: true,\n                unfinishedOnly: false,\n                finishedOnly: false,\n                startingDate: moment().format(\"YYYY-MM-DD\"),\n                endDate: moment().add(1, \"M\").format(\"YYYY-MM-DD\")\n            }\n        })\n            .then(resp => {\n                const data: Array<Task> = resp.data;\n\n                this.setState({\n                    render: data.map(task => (<TaskLabel key={task.id}\n                                                         completed={task.completed}\n                                                         creator={task.creator.displayName}\n                                                         dueDate={task.dueDate}\n                                                         group={task.group.name}\n                                                         subject={task.subject.name}\n                                                         tags={task.tags}\n                                                         title={task.title}>\n                            {task.description}\n                        </TaskLabel>)\n                    )\n                });\n            });\n    }\n\n    render() {\n        return (\n            <section className={\"taskList\"}>\n                {this.state.render}\n            </section>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {token: state.auth.token}\n};\n\nexport default connect(mapStateToProps)(TaskList);","import React from \"react\";\nimport GroupList from \"./Group/GroupList\";\nimport TaskList from \"./Task/TaskList\";\n\nconst Home = () => {\n    return (\n        <>\n            <GroupList isMobile={false}/>\n            <TaskList isMobile={false}/>\n        </>\n    );\n};\n\nexport default Home;","import {SAVE_TOKEN} from \"./actionTypes\";\n\nexport const saveToken = (token: string, refresh: string, expires_in: number) => ({\n    type: SAVE_TOKEN,\n    payload: {\n        token,\n        refresh,\n        expires_in\n    }\n});","import React, {Component} from 'react';\n\nimport GoogleLogin from \"react-google-login\";\n// @ts-ignore\nimport FacebookLogin, {ReactFacebookLoginInfo} from 'react-facebook-login/dist/facebook-login-render-props';\n\nimport {authInstance} from \"../axios/instaces\";\n\nimport {connect} from \"react-redux\";\nimport {saveToken} from \"../store/actions\";\n\nimport logo from '../assets/logo.png';\n\nimport {AuthDetails, Error} from \"../types/types\";\n\nimport {RouteComponentProps} from \"react-router-dom\";\n\ninterface Props extends RouteComponentProps {\n    saveToken: (token: string, refresh: string, expires_in: number) => void,\n}\n\nclass Authenticate extends Component<Props> {\n    render() {\n        let {from} = this.props.location.state || {from: {pathname: \"/home\"}};\n\n        const handleTokenSave = (respData: AuthDetails) => {\n            this.props.saveToken(respData.token, respData.refresh, respData.expires_in);\n            this.props.history.replace(from);\n        };\n\n        const handleRegister = (respData: Error, type: string, token: string) => {\n            if (respData.errorCode === 23)\n                this.props.history.replace({\n                    pathname: this.props.location.pathname + \"/consent\",\n                    search: \"?type=\" + type + \"&token=\" + token\n                });\n        };\n\n        const handleGoogleAuth = (resp: any) => {\n            const tokenId: string = resp.tokenId;\n            authInstance({\n                url: \"/auth\",\n                method: \"post\",\n                params: {\n                    \"grant_type\": \"google_openid\",\n                    \"openid_token\": tokenId,\n                    \"client_id\": \"H_MINDENHOL\"\n                }\n            })\n                .then(resp => {\n                    handleTokenSave(resp.data);\n                })\n                .catch(resp => {\n                    handleRegister(resp.response.data, \"google\", tokenId);\n                });\n        };\n\n        const handleFacebookLogin = (resp: ReactFacebookLoginInfo) => {\n            const accessToken = resp.accessToken;\n            authInstance({\n                url: \"/auth\",\n                method: \"post\",\n                params: {\n                    \"grant_type\": \"facebook_token\",\n                    \"facebook_token\": accessToken,\n                    \"client_id\": \"H_MINDENHOL\"\n                }\n            })\n                .then(resp => {\n                    handleTokenSave(resp.data);\n                })\n                .catch(resp => {\n                    handleRegister(resp.response.data, \"facebook\", accessToken);\n                });\n        };\n\n        return (\n            <div className=\"w-screen h-screen flex items-center justify-center\">\n                <div className=\"max-w-md md:max-w-lg p-3 lg:max-w-4xl\">\n                    <img src={logo} alt=\"Házizz logo\" className=\"w-5/6 md:w-3/5 m-auto\"/>\n                    <h1 className=\"text-center text-3xl font-bold text-hazizz_blue-200 md:text-5xl lg:text-6xl\">Jelentkezz\n                        be!</h1>\n                    <p className=\"text-xs text-center text-gray-600 tracking-tight md:text-sm md:tracking-normal lg:text-xl\">\n                        (Amennyiben nincs felhasználód a rendszer készít neked egyet.)\n                    </p>\n                    <p className=\"text-center text-hazizz_blue-200 text-xl font-semibold md:text-3xl lg:text-4xl\">\n                        Használd a közösségi bejelentkezések egyikét:\n                    </p>\n                    <div>\n                        <div className=\"flex flex-col lg:flex-row\">\n                            <FacebookLogin\n                                appId=\"737993926628989\"\n                                fields=\"email\"\n                                callback={handleFacebookLogin}\n                                size=\"small\"\n                                render={(props:ReactFacebookLoginInfo) => (\n                                    <button type=\"button\" className=\"btn btn-login btn-facebook small\"\n                                    onClick={props.onClick}>\n                                        Login with Facebook\n                                    </button>\n                                )}\n                            />\n                            <GoogleLogin\n                                clientId=\"425675787763-751dukg0oookea8tltaeboudlg0g555q.apps.googleusercontent.com\"\n                                onSuccess={handleGoogleAuth}\n                                onFailure={handleGoogleAuth}\n                                scope=\"openid\"\n                                className=\"btn btn-login btn-google md:text-xl justify-center\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, {saveToken})(Authenticate);\n","import React, {Component, ChangeEvent} from 'react';\n\nimport {connect} from \"react-redux\";\nimport {saveToken} from \"../store/actions\";\n\nimport logo from '../assets/logo.png';\n\nimport {RouteComponentProps} from \"react-router-dom\";\nimport queryString from \"querystring\";\nimport {authInstance} from \"../axios/instaces\";\nimport {AuthDetails} from \"../types/types\";\n\ninterface Props extends RouteComponentProps {\n    saveToken: (token: string, refresh: string, expires_in: number) => void,\n}\n\ntype State = {\n    authType: string,\n    token: string,\n    consent: boolean\n}\n\nclass Register extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            authType: \"\",\n            token: \"\",\n            consent: false\n        }\n    }\n\n    componentDidMount(): void {\n        const queryParams = queryString.parse(this.props.location.search.substr(1));\n        this.setState(()=>({\n            authType: queryParams.type as string,\n            token: queryParams.token as string,\n        }))\n    }\n\n    handleCheckChange = (event: ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            consent: event.target.checked\n        })\n    };\n\n    handleRegister = () => {\n        let registerUrlParameter = \"\";\n        let registerBodyParameter = \"\";\n        let loginValue = \"\";\n        let loginParameter = \"\";\n        switch (this.state.authType) {\n            case \"google\":\n                registerUrlParameter = \"googleregister\";\n                registerBodyParameter = \"openIdToken\";\n                loginValue = \"google_openid\";\n                loginParameter = \"openid_token\";\n                break;\n            case \"facebook\":\n                registerUrlParameter = \"facebookregister\";\n                registerBodyParameter = \"facebookToken\";\n                loginValue = \"facebook_token\";\n                loginParameter = \"facebook_token\";\n                break;\n        }\n        authInstance({\n            url: \"/account/\" + registerUrlParameter,\n            method: \"post\",\n            data: {\n                [registerBodyParameter]: this.state.token,\n                consent: this.state.consent\n            }\n        })\n            .then(resp=>{\n                if (resp.status === 201){\n                    authInstance({\n                        url: \"/auth\",\n                        method: \"post\",\n                        params: {\n                            \"grant_type\": loginValue,\n                            [loginParameter]: this.state.token,\n                            \"client_id\": \"H_MINDENHOL\"\n                        }\n                    })\n                        .then(resp => {\n                            this.handleTokenSave(resp.data);\n                        })\n                }\n            })\n    };\n\n    handleTokenSave = (respData: AuthDetails) => {\n        let {from} = this.props.location.state || {from: {pathname: \"/home\"}};\n\n        this.props.saveToken(respData.token, respData.refresh, respData.expires_in);\n        this.props.history.replace(from);\n    };\n\n    render() {\n        return (\n            <div className=\"w-screen h-screen flex items-center justify-center\">\n                <div className=\"max-w-md md:max-w-lg p-3 lg:max-w-4xl\">\n                    <img src={logo} alt=\"Házizz logo\" className=\"w-5/6 md:w-3/5 m-auto\"/>\n                    <h1 className=\"text-center text-3xl font-bold text-hazizz_blue-200 md:text-5xl lg:text-6xl\">\n                        Regisztáció!\n                    </h1>\n                    <div className=\"flex flex-col items-center justify-center\">\n                        <label className=\"consentLabel\" htmlFor=\"consent\">\n                            <input className=\"absolute opacity-0 cursor-pointer h-0 w-0\"\n                                   onChange={this.handleCheckChange} checked={this.state.consent} type=\"checkbox\"\n                                   name=\"consent\" id=\"consent\"/>\n                            <span className=\"consentCheckMark hover:bg-hazizz_blue-500 focus:shadow-outline\"/>\n                            A regisztrációval elfogadom a Házizz:\n                            <ul className=\"ml-3\">\n                                <li>\n                                    <a className=\"consentLink\" rel=\"noopener noreferrer\" target=\"_blank\"\n                                       href=\"https://raw.githubusercontent.com/hazizz/hazizz.github.io/master/privacy-hu.txt\">adatvédelmi\n                                        nyilatkozatát</a>,\n\n                                </li>\n                                <li>\n                                    <a className=\"consentLink\" rel=\"noopener noreferrer\" target=\"_blank\"\n                                       href=\"https://raw.githubusercontent.com/hazizz/hazizz.github.io/master/tos-hu.txt\">általános\n                                        szerződési feltételeti</a>,\n\n                                </li>\n                                <li>\n                                    <a className=\"consentLink\" rel=\"noopener noreferrer\" target=\"_blank\"\n                                       href=\"https://raw.githubusercontent.com/hazizz/hazizz.github.io/master/guideline-hu.txt\">házirendjét</a>!\n                                </li>\n                            </ul>\n                        </label>\n                        <button onClick={this.handleRegister} className=\"btn btn-green\">Tovább &raquo;</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, {saveToken})(Register);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Authenticate is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {HashRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nimport Home from \"./components/Home\";\nimport Authenticate from './containers/Authenticate';\nimport Register from './containers/Register';\nimport './tailwind.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst render =\n    <Provider store={store}>\n        <Router>\n            <Redirect to=\"/home\"/>\n            <Switch>\n                <PrivateRoute path=\"/home\" Component={Home}/>\n                <Route exact path=\"/authenticate\" component={Authenticate}/>\n                <Route path=\"/authenticate/consent\" component={Register}/>\n            </Switch>\n        </Router>\n    </Provider>;\n\nReactDOM.render(render, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}